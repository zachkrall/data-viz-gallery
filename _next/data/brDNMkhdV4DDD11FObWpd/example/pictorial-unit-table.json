{"pageProps":{"files":{"app.js":"import \"https://d3js.org/d3.v7.min.js\"\n\n// Incoming data\nconst data = [\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"red\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"red\",\n  \"blue\",\n  \"red\",\n]\n\nconst iconMap = {\n  red: \"ðŸ”´\",\n  blue: \"ðŸ”µ\",\n  yellow: \"ðŸŸ¡\",\n}\n\nconst chart = d3.select(\"#chart\")\n\nconst cleanedData = d3.rollup(\n  data,\n  (v) => v.length,\n  (d) => d\n)\n\nconst dataResults = d3\n  .select(\"#dataset\")\n  .append(\"code\")\n  .append(\"pre\")\n  .style(\"display\", \"block\")\n  .style(\"width\", \"100%\")\n  .style(\"min-height\", \"10rem\")\n  .text(JSON.stringify(Object.fromEntries(cleanedData), null, 4))\n\nchart\n  .append(\"table\")\n  .selectAll(\"tr\")\n  .data(cleanedData)\n  .join(\"tr\")\n  .call((row) => {\n    row.append(\"td\").text((d) => d[0])\n  })\n  .call((row) => {\n    row\n      .append(\"td\")\n      .selectAll(\"span\")\n      .data((d) => Array.from({ length: d[1] }).map(() => d[0]))\n      .join(\"span\")\n      .text((d) => iconMap[d])\n  })\n","index.html":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Pictorial Unit Chart</title>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <h1>Pictorial Unit Chart</h1>\n    <p>\n      A pictorial unit chart uses icons to demonstrate a quantity using a given\n      scale. (i.e. 1 icon = 10 data points)\n    </p>\n    <h2>Example Data Set</h2>\n    <div id=\"dataset\"></div>\n    <div id=\"chart\"></div>\n    <script src=\"app.js\" type=\"module\" async></script>\n  </body>\n</html>\n"},"initialBundle":"<!doctype html><html lang=\"en\"><head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Pictorial Unit Chart</title>\n    <style rel=\"stylesheet\" type=\"text/css\"></style>\n  </head>\n  <body>\n    <h1>Pictorial Unit Chart</h1>\n    <p>\n      A pictorial unit chart uses icons to demonstrate a quantity using a given\n      scale. (i.e. 1 icon = 10 data points)\n    </p>\n    <h2>Example Data Set</h2>\n    <div id=\"dataset\"></div>\n    <div id=\"chart\"></div>\n    <script type=\"module\" async>import \"https://d3js.org/d3.v7.min.js\"\n\n// Incoming data\nconst data = [\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"red\",\n  \"red\",\n  \"yellow\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"red\",\n  \"red\",\n  \"blue\",\n  \"yellow\",\n  \"yellow\",\n  \"yellow\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"red\",\n  \"blue\",\n  \"blue\",\n  \"yellow\",\n  \"red\",\n  \"blue\",\n  \"red\",\n]\n\nconst iconMap = {\n  red: \"ðŸ”´\",\n  blue: \"ðŸ”µ\",\n  yellow: \"ðŸŸ¡\",\n}\n\nconst chart = d3.select(\"#chart\")\n\nconst cleanedData = d3.rollup(\n  data,\n  (v) => v.length,\n  (d) => d\n)\n\nconst dataResults = d3\n  .select(\"#dataset\")\n  .append(\"code\")\n  .append(\"pre\")\n  .style(\"display\", \"block\")\n  .style(\"width\", \"100%\")\n  .style(\"min-height\", \"10rem\")\n  .text(JSON.stringify(Object.fromEntries(cleanedData), null, 4))\n\nchart\n  .append(\"table\")\n  .selectAll(\"tr\")\n  .data(cleanedData)\n  .join(\"tr\")\n  .call((row) => {\n    row.append(\"td\").text((d) => d[0])\n  })\n  .call((row) => {\n    row\n      .append(\"td\")\n      .selectAll(\"span\")\n      .data((d) => Array.from({ length: d[1] }).map(() => d[0]))\n      .join(\"span\")\n      .text((d) => iconMap[d])\n  })\n</script>\n  \n\n</body></html>","title":"pictorial-unit-table"},"__N_SSG":true}