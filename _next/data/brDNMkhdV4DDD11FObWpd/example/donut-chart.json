{"pageProps":{"files":{"app.js":"import \"https://d3js.org/d3.v7.min.js\"\n\n// set the dimensions and margins of the graph\nconst width = 450,\n  height = 450,\n  margin = 40\n\n// The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\nconst radius = Math.min(width, height) / 2 - margin\n\nconst root = d3.select(\"#root\")\n\n// append the svg object to the div called 'my_dataviz'\nconst svg = root\n  .append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n  .append(\"g\")\n  .attr(\"transform\", `translate(${width / 2},${height / 2})`)\n\n// Create dummy data\nconst data = { a: 9, b: 20, c: 30, d: 8, e: 12 }\n\n// set the color scale\nconst color = d3\n  .scaleOrdinal()\n  .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"])\n\n// Compute the position of each group on the pie:\nconst pie = d3.pie().value((d) => d[1])\n\nconst data_ready = pie(Object.entries(data))\n\n// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\nsvg\n  .selectAll(\"whatever\")\n  .data(data_ready)\n  .join(\"path\")\n  .attr(\n    \"d\",\n    d3\n      .arc()\n      .innerRadius(100) // This is the size of the donut hole\n      .outerRadius(radius)\n  )\n  .attr(\"fill\", (d) => color(d.data[0]))\n  .attr(\"stroke\", \"black\")\n  .style(\"stroke-width\", \"2px\")\n  .style(\"opacity\", 0.7)\n","index.html":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Donut Chart</title>\n    <link rel=\"stylesheet\" href=\"style.css\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script src=\"app.js\" type=\"module\" async></script>\n  </body>\n</html>\n","style.css":"body {\n  background: #eee;\n}\n"},"initialBundle":"<!doctype html><html lang=\"en\"><head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Donut Chart</title>\n    <style rel=\"stylesheet\" type=\"text/css\">body {\n  background: #eee;\n}\n</style>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" async>import \"https://d3js.org/d3.v7.min.js\"\n\n// set the dimensions and margins of the graph\nconst width = 450,\n  height = 450,\n  margin = 40\n\n// The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\nconst radius = Math.min(width, height) / 2 - margin\n\nconst root = d3.select(\"#root\")\n\n// append the svg object to the div called 'my_dataviz'\nconst svg = root\n  .append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n  .append(\"g\")\n  .attr(\"transform\", `translate(${width / 2},${height / 2})`)\n\n// Create dummy data\nconst data = { a: 9, b: 20, c: 30, d: 8, e: 12 }\n\n// set the color scale\nconst color = d3\n  .scaleOrdinal()\n  .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"])\n\n// Compute the position of each group on the pie:\nconst pie = d3.pie().value((d) => d[1])\n\nconst data_ready = pie(Object.entries(data))\n\n// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\nsvg\n  .selectAll(\"whatever\")\n  .data(data_ready)\n  .join(\"path\")\n  .attr(\n    \"d\",\n    d3\n      .arc()\n      .innerRadius(100) // This is the size of the donut hole\n      .outerRadius(radius)\n  )\n  .attr(\"fill\", (d) => color(d.data[0]))\n  .attr(\"stroke\", \"black\")\n  .style(\"stroke-width\", \"2px\")\n  .style(\"opacity\", 0.7)\n</script>\n  \n\n</body></html>","title":"donut-chart"},"__N_SSG":true}